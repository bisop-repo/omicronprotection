
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> ##1. Initiating procedure
> #1.1 Parsing args (use the commented command below for inputing them wihout console run)
> args = commandArgs(trailingOnly=TRUE) #args = c("data/temp/IOmicron.csv","I","temp.txt")
> print(args)
[1] "data/temp/OOmicronInteractions.csv"              
[2] "VOI"                                             
[3] "outputs/OOmicronInteractions//convertool_log.txt"
> 
> #1.2 Loading libraries
>   library(survival)
>   library(survminer)
>   library(ggplot2)
>   library(data.table)
>   library(vtable)
>   library(xtable)
> 
> #1.3 Saving various useful data
>   systeminfo = Sys.info()
>   user = as.character(systeminfo['login'])
>   computer = as.character(systeminfo['nodename'])
>   time.start = as.character(Sys.time())
>   
>   ptime = gsub(" ","_",time.start)
>   ptime = gsub(":","-",ptime)
>   
>   print(paste("Hello ",user," of ",computer,", it is ",time.start,".",sep=""))
[1] "Hello smid of daman.utia.cas.cz, it is 2022-07-21 14:49:29."
> 
> #1.4 Checking the provided arguments. The following if-else goes through the whole script and stops if requested args are not provided.
>   if(length(args) > 1){
+     print("Inputs have been provided.")
+     data.input = args[1]
+     data.input.events = paste(args[1],"events.csv",sep=".")
+     f.input.id = args[2]
+     cox.f = fread("cox/cox_estimation_formulas.txt",stringsAsFactors = FALSE)
+     f.input = noquote(as.character(cox.f[cox.f$ID == f.input.id,2]))
+ 
+     print(paste("I am using file: ",data.input,sep=""))
+     print(paste("...and Cox formula: ",f.input,sep=""))   
+     
+     if(length(args)>2){
+       print("I can see a convertool log provided.")
+       convertool.log.location = args[3]
+       convertool.log = read.delim(convertool.log.location, header = FALSE, sep = "\t", dec = ".")
+       names(convertool.log) = "record"
+       convertool.vignette = convertool.log[1:7,]
+     } else {
+       print("No Convertool log has been provided.")
+       convertool.log = NA
+       convertool.vignette = NA
+     }
+     
+   ##2. Modeling procedure
+     
+   #2.1 Data loading and initial processing
+   mtab = fread(data.input,stringsAsFactors = FALSE)
+   mtab.events = fread(data.input.events,stringsAsFactors = FALSE)
+   file.name = strsplit(data.input,"/")[[1]]
+   file.name = gsub(".csv","",file.name[length(file.name)])
+   
+   mtab[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   mtab.events[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab.events[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   #2.2 Preparing output directory
+   dir.name = file.name
+   dir.name = paste("outputs/",dir.name,sep="")
+   paste("The model files will be stored in: ",dir.name,"/",sep="")
+   if(file.exists(dir.name)){
+     print("The directory already exists, files will be rewritten.")
+     } else {
+     dir.create(dir.name)
+     print("The directory has been created.")
+ }
+  
+ #2.3. Switching to output directory, saving input file's descriptive stats
+   st(mtab,out='csv',file=paste(dir.name,'input_summary.csv',sep="/"))
+ 
+   custom.dq = list()
+   
+   VaccStatus_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at T1 == 0"]] = VaccStatus_medians
+   
+   Immunity_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at T1 == 0"]] = Immunity_medians
+   
+   VaccStatus_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at the respective T"]] = VaccStatus_medians_events
+   
+   Immunity_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at the respective T"]] = Immunity_medians_events
+   
+   sink(paste(dir.name,"input_summary_custom.txt",sep="/"))
+   print(custom.dq)
+   sink()  
+   gc()
+ 
+   print("The input file has been loaded, its properties have been saved. Proceeding to Cox model.")
+   
+   
+   
+ #2.4 Cox model estimation
+   f.input = as.formula(f.input)
+   cox = eval(bquote(coxph(.(f.input),data=mtab,cluster=Subject)))
+   cox.summary = summary(cox) 
+   print(cox.summary) # returns output to the console
+ 
+   ##3. Model outputs generation
+   #3.1 Hazard ratio plot
+   ggforest(cox, data = data.frame(mtab))
+   ggsave(paste(dir.name,"cox_risks_log.jpg",sep="/"),units="px",width=3840,height=3840)
+   print("Model charts have been generated.")
+   
+   #3.2 Txt (model summary)
+   sink(paste(dir.name,"cox_output.txt",sep="/"))
+   print(cox.summary)
+   sink()  
+   gc()
+   print("Model output has been saved (TXT).")
+ 
+   #3.2 TeX (params and exp(params))
+   beta <- coef(cox)
+   se   <- sqrt(diag(cox$var))
+   p    <- 1 - pchisq((beta/se)^2, 1)
+   CI   <- round(confint(cox), 3)
+   res <- data.frame(beta, se = se, CI, p)
+   names(res)[3:4] = c("low","high")
+   res$model.betas = paste(round(res$beta,2)," (",round(res$low,2),", ",round(res$high,2),")",sep="")
+   
+   res$hr = exp(res$beta)
+   res$hr.se = exp(res$se)
+   res$hr.low = exp(res$low)
+   res$hr.high = exp(res$high)
+   res$model.hr = paste(round(res$hr,2)," (",round(res$hr.low,2),", ",round(res$hr.high,2),")",sep="")
+   
+   res$eff = 1-res$hr
+   res$eff.high = 1-res$hr.low
+   res$eff.low = 1-res$hr.high
+   res$model.effectiveness = paste(round(res$eff,2)," (",round(res$eff.low,2),", ",round(res$eff.high,2),")",sep="")
+ 
+   modtab = res[,c("model.betas","model.hr","model.effectiveness")]
+   names(modtab) = c("Beta","HR","1-HR")
+   print(xtable(modtab),include.rownames=TRUE,file = paste(dir.name,"cox_output.tex",sep="/"), compress = FALSE)
+   print("Model output has been saved (TeX).")  
+   
+   #4. Closing sequence
+   time.end = as.character(Sys.time())
+   model.spent = difftime(time.end,time.start)
+   print("The procedure is finished in following time:")
+   print(model.spent)
+   
+   #4.1 Saving model run stats
+   run.overview = list()
+   run.overview[["user"]] = user
+   run.overview[["computer"]] = computer
+   run.overview[["arguments"]] = args
+   run.overview[["time.start"]] = time.start
+   run.overview[["time.end"]] = time.end
+   run.overview[["model.spent"]] = model.spent
+   run.overview[["model.concordance"]] = cox$concordance['concordance']
+   run.overview[["convertool.vignette"]] = convertool.vignette
+   
+   res$model.concordance = run.overview[["model.concordance"]]
+   res$model.ctool.version = run.overview[["convertool.vignette"]][1]
+   res$model.age.filter = run.overview[["convertool.vignette"]][4]
+   res$model.input.file = run.overview[["convertool.vignette"]][7]
+   res$model.input.horizon = run.overview[["convertool.vignette"]][5]
+   res$model.mode = f.input.id
+   res$model.calculated.at = time.end
+   
+   write.csv(res,file=paste(dir.name,"model_data.csv",sep="/"),row.names=FALSE)
+ 
+   sink(paste(dir.name,"model_run_overview.txt",sep="/"))
+   print(run.overview)
+   sink()
+ 
+   #4.2 Saving environment image (without the most heavy items)
+   rm(mtab,cox)
+   save(list=ls(), file=paste(dir.name,"environment.Rdata",sep="/"),compress=TRUE,compression_level=9)
+   print("Workspace image and log have been saved.")
+   print("https://www.youtube.com/watch?v=g3ENX3aHlqU")
+   
+   } else {
+     stop("Data input has not been provided, goodbye")
+     print(data.input)
+   }
[1] "Inputs have been provided."
[1] "I am using file: data/temp/OOmicronInteractions.csv"
[1] "...and Cox formula: Surv(T1,T2,VariantOxygen) ~ Immunity + AgeGr + Sex"
[1] "I can see a convertool log provided."
[1] "The directory already exists, files will be rewritten."
[1] "The input file has been loaded, its properties have been saved. Proceeding to Cox model."
Call:
coxph(formula = Surv(T1, T2, VariantOxygen) ~ Immunity + AgeGr + 
    Sex, data = mtab, cluster = Subject)

  n= 16558233, number of events= 763 
   (42 observations deleted due to missingness)

                            coef  exp(coef)   se(coef)  robust se        z
Immunityboost2-_alone -2.298e+00  1.005e-01  1.150e-01  1.163e-01  -19.765
Immunityboost2+_alone -1.886e+00  1.517e-01  1.314e-01  1.325e-01  -14.233
Immunityboost2+_inf6- -1.087e+01  1.898e-05  5.111e+04  9.337e-01  -11.644
Immunityfull2-_alone  -8.323e-01  4.350e-01  2.260e-01  2.272e-01   -3.663
Immunityfull2+_alone  -3.903e-01  6.769e-01  8.727e-02  8.790e-02   -4.440
Immunityfull2+_inf6-  -1.037e+01  3.141e-05  4.100e+01  6.149e-02 -168.607
Immunityinf6-_alone   -9.364e+00  8.580e-05  2.749e+01  6.439e-02 -145.407
Immunityinf6+_alone   -9.495e+00  7.523e-05  1.661e+01  5.797e-02 -163.790
Immunityinf6+_boost2- -1.031e+01  3.315e-05  1.586e+01  5.955e-02 -173.205
Immunityinf6+_boost2+ -1.090e+01  1.848e-05  3.972e+01  6.339e-02 -171.938
Immunityinf6+_full2-  -9.744e+00  5.866e-05  3.453e+01  6.075e-02 -160.387
Immunityinf6+_full2+  -9.842e+00  5.316e-05  1.622e+01  6.088e-02 -161.672
Immunitypart_alone    -1.323e+00  2.663e-01  5.802e-01  5.803e-01   -2.280
AgeGr0-11             -5.008e-01  6.060e-01  4.049e-01  4.029e-01   -1.243
AgeGr12-15            -6.757e-01  5.088e-01  6.584e-01  6.583e-01   -1.026
AgeGr16-17            -8.604e-01  4.230e-01  1.049e+00  1.050e+00   -0.819
AgeGr18-24             3.976e-04  1.000e+00  4.746e-01  4.752e-01    0.001
AgeGr25-29            -3.077e-01  7.352e-01  5.164e-01  5.165e-01   -0.596
AgeGr30-34             9.802e-02  1.103e+00  4.472e-01  4.471e-01    0.219
AgeGr35-39             9.692e-02  1.102e+00  4.472e-01  4.472e-01    0.217
AgeGr45-49             6.129e-01  1.846e+00  4.084e-01  4.089e-01    1.499
AgeGr50-54             1.155e+00  3.175e+00  3.874e-01  3.879e-01    2.978
AgeGr55-59             1.975e+00  7.205e+00  3.519e-01  3.521e-01    5.608
AgeGr60-64             2.017e+00  7.517e+00  3.537e-01  3.532e-01    5.712
AgeGr65-69             2.782e+00  1.616e+01  3.358e-01  3.359e-01    8.284
AgeGr70-74             3.186e+00  2.419e+01  3.328e-01  3.332e-01    9.562
AgeGr75-79             4.048e+00  5.726e+01  3.294e-01  3.312e-01   12.222
AgeGr80+               4.592e+00  9.869e+01  3.234e-01  3.237e-01   14.186
SexZ                  -5.916e-01  5.535e-01  7.385e-02  7.501e-02   -7.887
                      Pr(>|z|)    
Immunityboost2-_alone  < 2e-16 ***
Immunityboost2+_alone  < 2e-16 ***
Immunityboost2+_inf6-  < 2e-16 ***
Immunityfull2-_alone  0.000249 ***
Immunityfull2+_alone  8.99e-06 ***
Immunityfull2+_inf6-   < 2e-16 ***
Immunityinf6-_alone    < 2e-16 ***
Immunityinf6+_alone    < 2e-16 ***
Immunityinf6+_boost2-  < 2e-16 ***
Immunityinf6+_boost2+  < 2e-16 ***
Immunityinf6+_full2-   < 2e-16 ***
Immunityinf6+_full2+   < 2e-16 ***
Immunitypart_alone    0.022595 *  
AgeGr0-11             0.213896    
AgeGr12-15            0.304710    
AgeGr16-17            0.412517    
AgeGr18-24            0.999332    
AgeGr25-29            0.551427    
AgeGr30-34            0.826474    
AgeGr35-39            0.828430    
AgeGr45-49            0.133878    
AgeGr50-54            0.002898 ** 
AgeGr55-59            2.05e-08 ***
AgeGr60-64            1.12e-08 ***
AgeGr65-69             < 2e-16 ***
AgeGr70-74             < 2e-16 ***
AgeGr75-79             < 2e-16 ***
AgeGr80+               < 2e-16 ***
SexZ                  3.10e-15 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

                      exp(coef) exp(-coef) lower .95 upper .95
Immunityboost2-_alone 1.005e-01  9.954e+00 7.999e-02 1.262e-01
Immunityboost2+_alone 1.517e-01  6.594e+00 1.170e-01 1.966e-01
Immunityboost2+_inf6- 1.898e-05  5.269e+04 3.045e-06 1.183e-04
Immunityfull2-_alone  4.350e-01  2.299e+00 2.787e-01 6.791e-01
Immunityfull2+_alone  6.769e-01  1.477e+00 5.698e-01 8.041e-01
Immunityfull2+_inf6-  3.141e-05  3.184e+04 2.784e-05 3.543e-05
Immunityinf6-_alone   8.580e-05  1.166e+04 7.563e-05 9.734e-05
Immunityinf6+_alone   7.523e-05  1.329e+04 6.715e-05 8.429e-05
Immunityinf6+_boost2- 3.315e-05  3.017e+04 2.950e-05 3.725e-05
Immunityinf6+_boost2+ 1.848e-05  5.411e+04 1.632e-05 2.092e-05
Immunityinf6+_full2-  5.866e-05  1.705e+04 5.207e-05 6.608e-05
Immunityinf6+_full2+  5.316e-05  1.881e+04 4.718e-05 5.989e-05
Immunitypart_alone    2.663e-01  3.755e+00 8.539e-02 8.304e-01
AgeGr0-11             6.060e-01  1.650e+00 2.751e-01 1.335e+00
AgeGr12-15            5.088e-01  1.965e+00 1.400e-01 1.849e+00
AgeGr16-17            4.230e-01  2.364e+00 5.403e-02 3.312e+00
AgeGr18-24            1.000e+00  9.996e-01 3.942e-01 2.539e+00
AgeGr25-29            7.352e-01  1.360e+00 2.671e-01 2.023e+00
AgeGr30-34            1.103e+00  9.066e-01 4.592e-01 2.650e+00
AgeGr35-39            1.102e+00  9.076e-01 4.586e-01 2.647e+00
AgeGr45-49            1.846e+00  5.418e-01 8.282e-01 4.114e+00
AgeGr50-54            3.175e+00  3.149e-01 1.484e+00 6.791e+00
AgeGr55-59            7.205e+00  1.388e-01 3.613e+00 1.437e+01
AgeGr60-64            7.517e+00  1.330e-01 3.762e+00 1.502e+01
AgeGr65-69            1.616e+01  6.189e-02 8.366e+00 3.121e+01
AgeGr70-74            2.419e+01  4.134e-02 1.259e+01 4.647e+01
AgeGr75-79            5.726e+01  1.746e-02 2.992e+01 1.096e+02
AgeGr80+              9.869e+01  1.013e-02 5.233e+01 1.861e+02
SexZ                  5.535e-01  1.807e+00 4.778e-01 6.411e-01

Concordance= 0.895  (se = 0.006 )
Likelihood ratio test= 2281  on 29 df,   p=<2e-16
Wald test            = 75346  on 29 df,   p=<2e-16
Score (logrank) test = 3430  on 29 df,   p=<2e-16,   Robust = 762.8  p=<2e-16

  (Note: the likelihood ratio and score tests assume independence of
     observations within a cluster, the Wald and robust score tests do not).
[1] "Model charts have been generated."
[1] "Model output has been saved (TXT)."
[1] "Model output has been saved (TeX)."
[1] "The procedure is finished in following time:"
Time difference of 18.75 mins
[1] "Workspace image and log have been saved."
[1] "https://www.youtube.com/watch?v=g3ENX3aHlqU"
> 
