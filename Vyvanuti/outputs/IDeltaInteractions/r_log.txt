
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> ##1. Initiating procedure
> #1.1 Parsing args (use the commented command below for inputing them wihout console run)
> args = commandArgs(trailingOnly=TRUE) #args = c("data/temp/IOmicron.csv","I","temp.txt")
> print(args)
[1] "data/temp/IDeltaInteractions.csv"              
[2] "VII"                                           
[3] "outputs/IDeltaInteractions//convertool_log.txt"
> 
> #1.2 Loading libraries
>   library(survival)
>   library(survminer)
>   library(ggplot2)
>   library(data.table)
>   library(vtable)
>   library(xtable)
> 
> #1.3 Saving various useful data
>   systeminfo = Sys.info()
>   user = as.character(systeminfo['login'])
>   computer = as.character(systeminfo['nodename'])
>   time.start = as.character(Sys.time())
>   
>   ptime = gsub(" ","_",time.start)
>   ptime = gsub(":","-",ptime)
>   
>   print(paste("Hello ",user," of ",computer,", it is ",time.start,".",sep=""))
[1] "Hello smid of daman.utia.cas.cz, it is 2022-07-21 19:50:19."
> 
> #1.4 Checking the provided arguments. The following if-else goes through the whole script and stops if requested args are not provided.
>   if(length(args) > 1){
+     print("Inputs have been provided.")
+     data.input = args[1]
+     data.input.events = paste(args[1],"events.csv",sep=".")
+     f.input.id = args[2]
+     cox.f = fread("cox/cox_estimation_formulas.txt",stringsAsFactors = FALSE)
+     f.input = noquote(as.character(cox.f[cox.f$ID == f.input.id,2]))
+ 
+     print(paste("I am using file: ",data.input,sep=""))
+     print(paste("...and Cox formula: ",f.input,sep=""))   
+     
+     if(length(args)>2){
+       print("I can see a convertool log provided.")
+       convertool.log.location = args[3]
+       convertool.log = read.delim(convertool.log.location, header = FALSE, sep = "\t", dec = ".")
+       names(convertool.log) = "record"
+       convertool.vignette = convertool.log[1:7,]
+     } else {
+       print("No Convertool log has been provided.")
+       convertool.log = NA
+       convertool.vignette = NA
+     }
+     
+   ##2. Modeling procedure
+     
+   #2.1 Data loading and initial processing
+   mtab = fread(data.input,stringsAsFactors = FALSE)
+   mtab.events = fread(data.input.events,stringsAsFactors = FALSE)
+   file.name = strsplit(data.input,"/")[[1]]
+   file.name = gsub(".csv","",file.name[length(file.name)])
+   
+   mtab[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   mtab.events[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab.events[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   #2.2 Preparing output directory
+   dir.name = file.name
+   dir.name = paste("outputs/",dir.name,sep="")
+   paste("The model files will be stored in: ",dir.name,"/",sep="")
+   if(file.exists(dir.name)){
+     print("The directory already exists, files will be rewritten.")
+     } else {
+     dir.create(dir.name)
+     print("The directory has been created.")
+ }
+  
+ #2.3. Switching to output directory, saving input file's descriptive stats
+   st(mtab,out='csv',file=paste(dir.name,'input_summary.csv',sep="/"))
+ 
+   custom.dq = list()
+   
+   VaccStatus_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at T1 == 0"]] = VaccStatus_medians
+   
+   Immunity_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at T1 == 0"]] = Immunity_medians
+   
+   VaccStatus_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at the respective T"]] = VaccStatus_medians_events
+   
+   Immunity_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at the respective T"]] = Immunity_medians_events
+   
+   sink(paste(dir.name,"input_summary_custom.txt",sep="/"))
+   print(custom.dq)
+   sink()  
+   gc()
+ 
+   print("The input file has been loaded, its properties have been saved. Proceeding to Cox model.")
+   
+   
+   
+ #2.4 Cox model estimation
+   f.input = as.formula(f.input)
+   cox = eval(bquote(coxph(.(f.input),data=mtab,cluster=Subject)))
+   cox.summary = summary(cox) 
+   print(cox.summary) # returns output to the console
+ 
+   ##3. Model outputs generation
+   #3.1 Hazard ratio plot
+   ggforest(cox, data = data.frame(mtab))
+   ggsave(paste(dir.name,"cox_risks_log.jpg",sep="/"),units="px",width=3840,height=3840)
+   print("Model charts have been generated.")
+   
+   #3.2 Txt (model summary)
+   sink(paste(dir.name,"cox_output.txt",sep="/"))
+   print(cox.summary)
+   sink()  
+   gc()
+   print("Model output has been saved (TXT).")
+ 
+   #3.2 TeX (params and exp(params))
+   beta <- coef(cox)
+   se   <- sqrt(diag(cox$var))
+   p    <- 1 - pchisq((beta/se)^2, 1)
+   CI   <- round(confint(cox), 3)
+   res <- data.frame(beta, se = se, CI, p)
+   names(res)[3:4] = c("low","high")
+   res$model.betas = paste(round(res$beta,2)," (",round(res$low,2),", ",round(res$high,2),")",sep="")
+   
+   res$hr = exp(res$beta)
+   res$hr.se = exp(res$se)
+   res$hr.low = exp(res$low)
+   res$hr.high = exp(res$high)
+   res$model.hr = paste(round(res$hr,2)," (",round(res$hr.low,2),", ",round(res$hr.high,2),")",sep="")
+   
+   res$eff = 1-res$hr
+   res$eff.high = 1-res$hr.low
+   res$eff.low = 1-res$hr.high
+   res$model.effectiveness = paste(round(res$eff,2)," (",round(res$eff.low,2),", ",round(res$eff.high,2),")",sep="")
+ 
+   modtab = res[,c("model.betas","model.hr","model.effectiveness")]
+   names(modtab) = c("Beta","HR","1-HR")
+   print(xtable(modtab),include.rownames=TRUE,file = paste(dir.name,"cox_output.tex",sep="/"), compress = FALSE)
+   print("Model output has been saved (TeX).")  
+   
+   #4. Closing sequence
+   time.end = as.character(Sys.time())
+   model.spent = difftime(time.end,time.start)
+   print("The procedure is finished in following time:")
+   print(model.spent)
+   
+   #4.1 Saving model run stats
+   run.overview = list()
+   run.overview[["user"]] = user
+   run.overview[["computer"]] = computer
+   run.overview[["arguments"]] = args
+   run.overview[["time.start"]] = time.start
+   run.overview[["time.end"]] = time.end
+   run.overview[["model.spent"]] = model.spent
+   run.overview[["model.concordance"]] = cox$concordance['concordance']
+   run.overview[["convertool.vignette"]] = convertool.vignette
+   
+   res$model.concordance = run.overview[["model.concordance"]]
+   res$model.ctool.version = run.overview[["convertool.vignette"]][1]
+   res$model.age.filter = run.overview[["convertool.vignette"]][4]
+   res$model.input.file = run.overview[["convertool.vignette"]][7]
+   res$model.input.horizon = run.overview[["convertool.vignette"]][5]
+   res$model.mode = f.input.id
+   res$model.calculated.at = time.end
+   
+   write.csv(res,file=paste(dir.name,"model_data.csv",sep="/"),row.names=FALSE)
+ 
+   sink(paste(dir.name,"model_run_overview.txt",sep="/"))
+   print(run.overview)
+   sink()
+ 
+   #4.2 Saving environment image (without the most heavy items)
+   rm(mtab,cox)
+   save(list=ls(), file=paste(dir.name,"environment.Rdata",sep="/"),compress=TRUE,compression_level=9)
+   print("Workspace image and log have been saved.")
+   print("https://www.youtube.com/watch?v=g3ENX3aHlqU")
+   
+   } else {
+     stop("Data input has not been provided, goodbye")
+     print(data.input)
+   }
[1] "Inputs have been provided."
[1] "I am using file: data/temp/IDeltaInteractions.csv"
[1] "...and Cox formula: Surv(T1,T2,VariantInf) ~ Immunity + AgeGr + Sex"
[1] "I can see a convertool log provided."
[1] "The directory already exists, files will be rewritten."
[1] "The input file has been loaded, its properties have been saved. Proceeding to Cox model."
Call:
coxph(formula = Surv(T1, T2, VariantInf) ~ Immunity + AgeGr + 
    Sex, data = mtab, cluster = Subject)

  n= 18045537, number of events= 89396 

                            coef  exp(coef)   se(coef)  robust se        z
Immunityboost2-_alone -2.357e+00  9.470e-02  2.278e-02  2.314e-02 -101.863
Immunityboost2+_alone -1.690e+00  1.845e-01  6.148e-02  6.168e-02  -27.403
Immunityboost2+_inf6- -1.016e+01  3.867e-05  0.000e+00  0.000e+00     -Inf
Immunityfull2-_alone  -1.318e+00  2.676e-01  2.433e-02  2.438e-02  -54.069
Immunityfull2+_alone  -8.414e-01  4.311e-01  7.965e-03  7.950e-03 -105.834
Immunityfull2+_inf6-  -3.132e+00  4.362e-02  4.083e-01  4.082e-01   -7.673
Immunityinf6-_alone   -3.037e+00  4.799e-02  1.271e-01  1.271e-01  -23.898
Immunityinf6-_boost2- -3.030e+00  4.831e-02  1.000e+00  1.000e+00   -3.030
Immunityinf6-_boost2+ -1.004e+01  4.379e-05  6.669e+01  2.973e-02 -337.584
Immunityinf6-_full2-  -1.007e+01  4.250e-05  3.143e+01  2.318e-02 -434.295
Immunityinf6-_full2+  -3.406e+00  3.317e-02  3.163e-01  3.162e-01  -10.771
Immunityinf6+_alone   -1.781e+00  1.685e-01  2.519e-02  2.520e-02  -70.670
Immunityinf6+_boost2- -4.126e+00  1.615e-02  1.362e-01  1.363e-01  -30.278
Immunityinf6+_boost2+ -2.823e+00  5.941e-02  3.163e-01  3.162e-01   -8.928
Immunityinf6+_full2-  -3.710e+00  2.448e-02  1.388e-01  1.388e-01  -26.730
Immunityinf6+_full2+  -3.183e+00  4.148e-02  4.035e-02  4.036e-02  -78.853
Immunitypart_alone    -1.070e+00  3.429e-01  3.062e-02  3.067e-02  -34.901
AgeGr0-11             -5.678e-01  5.667e-01  1.377e-02  1.361e-02  -41.714
AgeGr12-15             2.825e-02  1.029e+00  1.701e-02  1.690e-02    1.671
AgeGr16-17             2.251e-02  1.023e+00  2.451e-02  2.451e-02    0.918
AgeGr18-24            -1.887e-01  8.280e-01  1.709e-02  1.714e-02  -11.009
AgeGr25-29            -2.904e-01  7.480e-01  1.730e-02  1.727e-02  -16.813
AgeGr30-34            -1.088e-01  8.969e-01  1.578e-02  1.576e-02   -6.905
AgeGr35-39             3.074e-02  1.031e+00  1.516e-02  1.517e-02    2.027
AgeGr45-49             9.455e-02  1.099e+00  1.515e-02  1.521e-02    6.217
AgeGr50-54            -5.964e-02  9.421e-01  1.691e-02  1.696e-02   -3.516
AgeGr55-59            -1.415e-01  8.680e-01  1.762e-02  1.766e-02   -8.017
AgeGr60-64            -4.661e-01  6.275e-01  2.017e-02  2.019e-02  -23.088
AgeGr65-69            -5.375e-01  5.842e-01  2.090e-02  2.095e-02  -25.658
AgeGr70-74            -5.475e-01  5.784e-01  2.302e-02  2.312e-02  -23.683
AgeGr75-79            -3.742e-01  6.878e-01  2.716e-02  2.749e-02  -13.613
AgeGr80+              -3.990e-01  6.710e-01  2.537e-02  2.562e-02  -15.577
SexZ                   1.167e-01  1.124e+00  6.716e-03  6.741e-03   17.312
                      Pr(>|z|)    
Immunityboost2-_alone  < 2e-16 ***
Immunityboost2+_alone  < 2e-16 ***
Immunityboost2+_inf6-  < 2e-16 ***
Immunityfull2-_alone   < 2e-16 ***
Immunityfull2+_alone   < 2e-16 ***
Immunityfull2+_inf6-  1.68e-14 ***
Immunityinf6-_alone    < 2e-16 ***
Immunityinf6-_boost2- 0.002445 ** 
Immunityinf6-_boost2+  < 2e-16 ***
Immunityinf6-_full2-   < 2e-16 ***
Immunityinf6-_full2+   < 2e-16 ***
Immunityinf6+_alone    < 2e-16 ***
Immunityinf6+_boost2-  < 2e-16 ***
Immunityinf6+_boost2+  < 2e-16 ***
Immunityinf6+_full2-   < 2e-16 ***
Immunityinf6+_full2+   < 2e-16 ***
Immunitypart_alone     < 2e-16 ***
AgeGr0-11              < 2e-16 ***
AgeGr12-15            0.094668 .  
AgeGr16-17            0.358544    
AgeGr18-24             < 2e-16 ***
AgeGr25-29             < 2e-16 ***
AgeGr30-34            5.02e-12 ***
AgeGr35-39            0.042699 *  
AgeGr45-49            5.05e-10 ***
AgeGr50-54            0.000439 ***
AgeGr55-59            1.08e-15 ***
AgeGr60-64             < 2e-16 ***
AgeGr65-69             < 2e-16 ***
AgeGr70-74             < 2e-16 ***
AgeGr75-79             < 2e-16 ***
AgeGr80+               < 2e-16 ***
SexZ                   < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

                      exp(coef) exp(-coef) lower .95 upper .95
Immunityboost2-_alone 9.470e-02  1.056e+01 9.051e-02 9.910e-02
Immunityboost2+_alone 1.845e-01  5.421e+00 1.635e-01 2.082e-01
Immunityboost2+_inf6- 3.867e-05  2.586e+04 3.867e-05 3.867e-05
Immunityfull2-_alone  2.676e-01  3.737e+00 2.551e-01 2.807e-01
Immunityfull2+_alone  4.311e-01  2.320e+00 4.245e-01 4.379e-01
Immunityfull2+_inf6-  4.362e-02  2.293e+01 1.960e-02 9.708e-02
Immunityinf6-_alone   4.799e-02  2.084e+01 3.741e-02 6.157e-02
Immunityinf6-_boost2- 4.831e-02  2.070e+01 6.804e-03 3.430e-01
Immunityinf6-_boost2+ 4.379e-05  2.284e+04 4.131e-05 4.641e-05
Immunityinf6-_full2-  4.250e-05  2.353e+04 4.061e-05 4.448e-05
Immunityinf6-_full2+  3.317e-02  3.015e+01 1.785e-02 6.165e-02
Immunityinf6+_alone   1.685e-01  5.936e+00 1.603e-01 1.770e-01
Immunityinf6+_boost2- 1.615e-02  6.191e+01 1.237e-02 2.110e-02
Immunityinf6+_boost2+ 5.941e-02  1.683e+01 3.197e-02 1.104e-01
Immunityinf6+_full2-  2.448e-02  4.084e+01 1.865e-02 3.214e-02
Immunityinf6+_full2+  4.148e-02  2.411e+01 3.833e-02 4.490e-02
Immunitypart_alone    3.429e-01  2.916e+00 3.229e-01 3.641e-01
AgeGr0-11             5.667e-01  1.764e+00 5.518e-01 5.821e-01
AgeGr12-15            1.029e+00  9.721e-01 9.951e-01 1.063e+00
AgeGr16-17            1.023e+00  9.777e-01 9.748e-01 1.073e+00
AgeGr18-24            8.280e-01  1.208e+00 8.007e-01 8.563e-01
AgeGr25-29            7.480e-01  1.337e+00 7.231e-01 7.737e-01
AgeGr30-34            8.969e-01  1.115e+00 8.696e-01 9.250e-01
AgeGr35-39            1.031e+00  9.697e-01 1.001e+00 1.062e+00
AgeGr45-49            1.099e+00  9.098e-01 1.067e+00 1.132e+00
AgeGr50-54            9.421e-01  1.061e+00 9.113e-01 9.740e-01
AgeGr55-59            8.680e-01  1.152e+00 8.385e-01 8.986e-01
AgeGr60-64            6.275e-01  1.594e+00 6.031e-01 6.528e-01
AgeGr65-69            5.842e-01  1.712e+00 5.607e-01 6.087e-01
AgeGr70-74            5.784e-01  1.729e+00 5.528e-01 6.052e-01
AgeGr75-79            6.878e-01  1.454e+00 6.518e-01 7.259e-01
AgeGr80+              6.710e-01  1.490e+00 6.381e-01 7.055e-01
SexZ                  1.124e+00  8.898e-01 1.109e+00 1.139e+00

Concordance= 0.715  (se = 0.001 )
Likelihood ratio test= 56129  on 33 df,   p=<2e-16
Wald test            = 313538  on 33 df,   p=<2e-16
Score (logrank) test = 51598  on 33 df,   p=<2e-16,   Robust = 60352  p=<2e-16

  (Note: the likelihood ratio and score tests assume independence of
     observations within a cluster, the Wald and robust score tests do not).
[1] "Model charts have been generated."
[1] "Model output has been saved (TXT)."
[1] "Model output has been saved (TeX)."
[1] "The procedure is finished in following time:"
Time difference of 33.83333 mins
[1] "Workspace image and log have been saved."
[1] "https://www.youtube.com/watch?v=g3ENX3aHlqU"
> 
