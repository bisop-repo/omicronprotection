
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> ##1. Initiating procedure
> #1.1 Parsing args (use the commented command below for inputing them wihout console run)
> args = commandArgs(trailingOnly=TRUE) #args = c("data/temp/IOmicron.csv","I","temp.txt")
> print(args)
[1] "data/temp/UOmicronInteractions.csv"              
[2] "VUI"                                             
[3] "outputs/UOmicronInteractions//convertool_log.txt"
> 
> #1.2 Loading libraries
>   library(survival)
>   library(survminer)
>   library(ggplot2)
>   library(data.table)
>   library(vtable)
>   library(xtable)
> 
> #1.3 Saving various useful data
>   systeminfo = Sys.info()
>   user = as.character(systeminfo['login'])
>   computer = as.character(systeminfo['nodename'])
>   time.start = as.character(Sys.time())
>   
>   ptime = gsub(" ","_",time.start)
>   ptime = gsub(":","-",ptime)
>   
>   print(paste("Hello ",user," of ",computer,", it is ",time.start,".",sep=""))
[1] "Hello smid of daman.utia.cas.cz, it is 2022-07-21 15:10:37."
> 
> #1.4 Checking the provided arguments. The following if-else goes through the whole script and stops if requested args are not provided.
>   if(length(args) > 1){
+     print("Inputs have been provided.")
+     data.input = args[1]
+     data.input.events = paste(args[1],"events.csv",sep=".")
+     f.input.id = args[2]
+     cox.f = fread("cox/cox_estimation_formulas.txt",stringsAsFactors = FALSE)
+     f.input = noquote(as.character(cox.f[cox.f$ID == f.input.id,2]))
+ 
+     print(paste("I am using file: ",data.input,sep=""))
+     print(paste("...and Cox formula: ",f.input,sep=""))   
+     
+     if(length(args)>2){
+       print("I can see a convertool log provided.")
+       convertool.log.location = args[3]
+       convertool.log = read.delim(convertool.log.location, header = FALSE, sep = "\t", dec = ".")
+       names(convertool.log) = "record"
+       convertool.vignette = convertool.log[1:7,]
+     } else {
+       print("No Convertool log has been provided.")
+       convertool.log = NA
+       convertool.vignette = NA
+     }
+     
+   ##2. Modeling procedure
+     
+   #2.1 Data loading and initial processing
+   mtab = fread(data.input,stringsAsFactors = FALSE)
+   mtab.events = fread(data.input.events,stringsAsFactors = FALSE)
+   file.name = strsplit(data.input,"/")[[1]]
+   file.name = gsub(".csv","",file.name[length(file.name)])
+   
+   mtab[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   mtab.events[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab.events[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   #2.2 Preparing output directory
+   dir.name = file.name
+   dir.name = paste("outputs/",dir.name,sep="")
+   paste("The model files will be stored in: ",dir.name,"/",sep="")
+   if(file.exists(dir.name)){
+     print("The directory already exists, files will be rewritten.")
+     } else {
+     dir.create(dir.name)
+     print("The directory has been created.")
+ }
+  
+ #2.3. Switching to output directory, saving input file's descriptive stats
+   st(mtab,out='csv',file=paste(dir.name,'input_summary.csv',sep="/"))
+ 
+   custom.dq = list()
+   
+   VaccStatus_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at T1 == 0"]] = VaccStatus_medians
+   
+   Immunity_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at T1 == 0"]] = Immunity_medians
+   
+   VaccStatus_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at the respective T"]] = VaccStatus_medians_events
+   
+   Immunity_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at the respective T"]] = Immunity_medians_events
+   
+   sink(paste(dir.name,"input_summary_custom.txt",sep="/"))
+   print(custom.dq)
+   sink()  
+   gc()
+ 
+   print("The input file has been loaded, its properties have been saved. Proceeding to Cox model.")
+   
+   
+   
+ #2.4 Cox model estimation
+   f.input = as.formula(f.input)
+   cox = eval(bquote(coxph(.(f.input),data=mtab,cluster=Subject)))
+   cox.summary = summary(cox) 
+   print(cox.summary) # returns output to the console
+ 
+   ##3. Model outputs generation
+   #3.1 Hazard ratio plot
+   ggforest(cox, data = data.frame(mtab))
+   ggsave(paste(dir.name,"cox_risks_log.jpg",sep="/"),units="px",width=3840,height=3840)
+   print("Model charts have been generated.")
+   
+   #3.2 Txt (model summary)
+   sink(paste(dir.name,"cox_output.txt",sep="/"))
+   print(cox.summary)
+   sink()  
+   gc()
+   print("Model output has been saved (TXT).")
+ 
+   #3.2 TeX (params and exp(params))
+   beta <- coef(cox)
+   se   <- sqrt(diag(cox$var))
+   p    <- 1 - pchisq((beta/se)^2, 1)
+   CI   <- round(confint(cox), 3)
+   res <- data.frame(beta, se = se, CI, p)
+   names(res)[3:4] = c("low","high")
+   res$model.betas = paste(round(res$beta,2)," (",round(res$low,2),", ",round(res$high,2),")",sep="")
+   
+   res$hr = exp(res$beta)
+   res$hr.se = exp(res$se)
+   res$hr.low = exp(res$low)
+   res$hr.high = exp(res$high)
+   res$model.hr = paste(round(res$hr,2)," (",round(res$hr.low,2),", ",round(res$hr.high,2),")",sep="")
+   
+   res$eff = 1-res$hr
+   res$eff.high = 1-res$hr.low
+   res$eff.low = 1-res$hr.high
+   res$model.effectiveness = paste(round(res$eff,2)," (",round(res$eff.low,2),", ",round(res$eff.high,2),")",sep="")
+ 
+   modtab = res[,c("model.betas","model.hr","model.effectiveness")]
+   names(modtab) = c("Beta","HR","1-HR")
+   print(xtable(modtab),include.rownames=TRUE,file = paste(dir.name,"cox_output.tex",sep="/"), compress = FALSE)
+   print("Model output has been saved (TeX).")  
+   
+   #4. Closing sequence
+   time.end = as.character(Sys.time())
+   model.spent = difftime(time.end,time.start)
+   print("The procedure is finished in following time:")
+   print(model.spent)
+   
+   #4.1 Saving model run stats
+   run.overview = list()
+   run.overview[["user"]] = user
+   run.overview[["computer"]] = computer
+   run.overview[["arguments"]] = args
+   run.overview[["time.start"]] = time.start
+   run.overview[["time.end"]] = time.end
+   run.overview[["model.spent"]] = model.spent
+   run.overview[["model.concordance"]] = cox$concordance['concordance']
+   run.overview[["convertool.vignette"]] = convertool.vignette
+   
+   res$model.concordance = run.overview[["model.concordance"]]
+   res$model.ctool.version = run.overview[["convertool.vignette"]][1]
+   res$model.age.filter = run.overview[["convertool.vignette"]][4]
+   res$model.input.file = run.overview[["convertool.vignette"]][7]
+   res$model.input.horizon = run.overview[["convertool.vignette"]][5]
+   res$model.mode = f.input.id
+   res$model.calculated.at = time.end
+   
+   write.csv(res,file=paste(dir.name,"model_data.csv",sep="/"),row.names=FALSE)
+ 
+   sink(paste(dir.name,"model_run_overview.txt",sep="/"))
+   print(run.overview)
+   sink()
+ 
+   #4.2 Saving environment image (without the most heavy items)
+   rm(mtab,cox)
+   save(list=ls(), file=paste(dir.name,"environment.Rdata",sep="/"),compress=TRUE,compression_level=9)
+   print("Workspace image and log have been saved.")
+   print("https://www.youtube.com/watch?v=g3ENX3aHlqU")
+   
+   } else {
+     stop("Data input has not been provided, goodbye")
+     print(data.input)
+   }
[1] "Inputs have been provided."
[1] "I am using file: data/temp/UOmicronInteractions.csv"
[1] "...and Cox formula: Surv(T1,T2,VariantICU) ~ Immunity + AgeGr + Sex"
[1] "I can see a convertool log provided."
[1] "The directory already exists, files will be rewritten."
[1] "The input file has been loaded, its properties have been saved. Proceeding to Cox model."
Call:
coxph(formula = Surv(T1, T2, VariantICU) ~ Immunity + AgeGr + 
    Sex, data = mtab, cluster = Subject)

  n= 16558275, number of events= 236 

                            coef  exp(coef)   se(coef)  robust se       z
Immunityboost2-_alone -1.812e+00  1.633e-01  2.005e-01  2.050e-01  -8.837
Immunityboost2+_alone -9.352e-01  3.925e-01  2.225e-01  2.312e-01  -4.044
Immunityboost2+_inf6- -1.097e+01  1.726e-05  9.828e+04  1.018e+00 -10.771
Immunityfull2-_alone  -8.683e-01  4.197e-01  4.237e-01  4.268e-01  -2.034
Immunityfull2+_alone  -4.754e-01  6.216e-01  1.717e-01  1.712e-01  -2.777
Immunityfull2+_inf6-  -9.431e+00  8.017e-05  5.426e+01  1.204e-01 -78.307
Immunityinf6-_alone   -1.731e+00  1.770e-01  1.007e+00  1.010e+00  -1.714
Immunityinf6+_alone   -1.580e+00  2.060e-01  5.872e-01  5.886e-01  -2.684
Immunityinf6+_boost2- -9.442e+00  7.935e-05  2.070e+01  1.157e-01 -81.571
Immunityinf6+_boost2+ -9.940e+00  4.821e-05  5.839e+01  1.346e-01 -73.833
Immunityinf6+_full2-  -8.796e+00  1.513e-04  3.943e+01  1.125e-01 -78.220
Immunityinf6+_full2+  -8.972e+00  1.269e-04  1.910e+01  1.133e-01 -79.177
Immunitypart_alone     2.839e-01  1.328e+00  5.116e-01  5.096e-01   0.557
AgeGr0-11             -6.604e-01  5.167e-01  4.696e-01  4.665e-01  -1.416
AgeGr12-15            -8.778e-01  4.157e-01  7.912e-01  7.927e-01  -1.107
AgeGr16-17            -6.205e-01  5.377e-01  1.061e+00  1.064e+00  -0.583
AgeGr18-24             1.043e-01  1.110e+00  5.184e-01  5.173e-01   0.202
AgeGr25-29            -1.868e+00  1.544e-01  1.061e+00  1.061e+00  -1.761
AgeGr30-34            -5.894e-01  5.546e-01  6.124e-01  6.126e-01  -0.962
AgeGr35-39             9.915e-02  1.104e+00  5.000e-01  4.999e-01   0.198
AgeGr45-49             5.361e-02  1.055e+00  5.179e-01  5.174e-01   0.104
AgeGr50-54             8.421e-01  2.321e+00  4.567e-01  4.576e-01   1.840
AgeGr55-59             1.195e+00  3.304e+00  4.334e-01  4.345e-01   2.751
AgeGr60-64             1.140e+00  3.127e+00  4.439e-01  4.395e-01   2.594
AgeGr65-69             2.160e+00  8.667e+00  3.918e-01  3.913e-01   5.519
AgeGr70-74             2.012e+00  7.475e+00  4.045e-01  4.055e-01   4.960
AgeGr75-79             2.353e+00  1.052e+01  4.135e-01  4.175e-01   5.636
AgeGr80+               2.986e+00  1.980e+01  3.863e-01  3.877e-01   7.700
SexZ                  -7.468e-01  4.739e-01  1.357e-01  1.373e-01  -5.439
                      Pr(>|z|)    
Immunityboost2-_alone  < 2e-16 ***
Immunityboost2+_alone 5.25e-05 ***
Immunityboost2+_inf6-  < 2e-16 ***
Immunityfull2-_alone   0.04191 *  
Immunityfull2+_alone   0.00549 ** 
Immunityfull2+_inf6-   < 2e-16 ***
Immunityinf6-_alone    0.08654 .  
Immunityinf6+_alone    0.00728 ** 
Immunityinf6+_boost2-  < 2e-16 ***
Immunityinf6+_boost2+  < 2e-16 ***
Immunityinf6+_full2-   < 2e-16 ***
Immunityinf6+_full2+   < 2e-16 ***
Immunitypart_alone     0.57748    
AgeGr0-11              0.15685    
AgeGr12-15             0.26813    
AgeGr16-17             0.55969    
AgeGr18-24             0.84014    
AgeGr25-29             0.07819 .  
AgeGr30-34             0.33597    
AgeGr35-39             0.84279    
AgeGr45-49             0.91748    
AgeGr50-54             0.06574 .  
AgeGr55-59             0.00595 ** 
AgeGr60-64             0.00949 ** 
AgeGr65-69            3.40e-08 ***
AgeGr70-74            7.04e-07 ***
AgeGr75-79            1.74e-08 ***
AgeGr80+              1.36e-14 ***
SexZ                  5.36e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

                      exp(coef) exp(-coef) lower .95 upper .95
Immunityboost2-_alone 1.633e-01  6.122e+00 1.093e-01 2.441e-01
Immunityboost2+_alone 3.925e-01  2.548e+00 2.495e-01 6.176e-01
Immunityboost2+_inf6- 1.726e-05  5.793e+04 2.346e-06 1.270e-04
Immunityfull2-_alone  4.197e-01  2.383e+00 1.818e-01 9.687e-01
Immunityfull2+_alone  6.216e-01  1.609e+00 4.444e-01 8.695e-01
Immunityfull2+_inf6-  8.017e-05  1.247e+04 6.332e-05 1.015e-04
Immunityinf6-_alone   1.770e-01  5.649e+00 2.444e-02 1.282e+00
Immunityinf6+_alone   2.060e-01  4.854e+00 6.500e-02 6.530e-01
Immunityinf6+_boost2- 7.935e-05  1.260e+04 6.324e-05 9.955e-05
Immunityinf6+_boost2+ 4.821e-05  2.074e+04 3.703e-05 6.277e-05
Immunityinf6+_full2-  1.513e-04  6.610e+03 1.214e-04 1.886e-04
Immunityinf6+_full2+  1.269e-04  7.879e+03 1.016e-04 1.585e-04
Immunitypart_alone    1.328e+00  7.529e-01 4.892e-01 3.606e+00
AgeGr0-11             5.167e-01  1.936e+00 2.071e-01 1.289e+00
AgeGr12-15            4.157e-01  2.406e+00 8.791e-02 1.966e+00
AgeGr16-17            5.377e-01  1.860e+00 6.683e-02 4.326e+00
AgeGr18-24            1.110e+00  9.009e-01 4.027e-01 3.059e+00
AgeGr25-29            1.544e-01  6.477e+00 1.930e-02 1.235e+00
AgeGr30-34            5.546e-01  1.803e+00 1.669e-01 1.843e+00
AgeGr35-39            1.104e+00  9.056e-01 4.145e-01 2.942e+00
AgeGr45-49            1.055e+00  9.478e-01 3.827e-01 2.909e+00
AgeGr50-54            2.321e+00  4.308e-01 9.467e-01 5.692e+00
AgeGr55-59            3.304e+00  3.027e-01 1.410e+00 7.741e+00
AgeGr60-64            3.127e+00  3.198e-01 1.321e+00 7.401e+00
AgeGr65-69            8.667e+00  1.154e-01 4.026e+00 1.866e+01
AgeGr70-74            7.475e+00  1.338e-01 3.376e+00 1.655e+01
AgeGr75-79            1.052e+01  9.505e-02 4.641e+00 2.385e+01
AgeGr80+              1.980e+01  5.051e-02 9.259e+00 4.233e+01
SexZ                  4.739e-01  2.110e+00 3.621e-01 6.202e-01

Concordance= 0.826  (se = 0.014 )
Likelihood ratio test= 417.6  on 29 df,   p=<2e-16
Wald test            = 18812  on 29 df,   p=<2e-16
Score (logrank) test = 500.8  on 29 df,   p=<2e-16,   Robust = 236  p=<2e-16

  (Note: the likelihood ratio and score tests assume independence of
     observations within a cluster, the Wald and robust score tests do not).
[1] "Model charts have been generated."
[1] "Model output has been saved (TXT)."
[1] "Model output has been saved (TeX)."
[1] "The procedure is finished in following time:"
Time difference of 17.53333 mins
[1] "Workspace image and log have been saved."
[1] "https://www.youtube.com/watch?v=g3ENX3aHlqU"
> 
