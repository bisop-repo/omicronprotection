
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> ##1. Initiating procedure
> #1.1 Parsing args (use the commented command below for inputing them wihout console run)
> args = commandArgs(trailingOnly=TRUE) #args = c("data/temp/IOmicron.csv","I","temp.txt")
> print(args)
[1] "data/temp/HOmicronInteractions.csv"              
[2] "VHI"                                             
[3] "outputs/HOmicronInteractions//convertool_log.txt"
> 
> #1.2 Loading libraries
>   library(survival)
>   library(survminer)
>   library(ggplot2)
>   library(data.table)
>   library(vtable)
>   library(xtable)
> 
> #1.3 Saving various useful data
>   systeminfo = Sys.info()
>   user = as.character(systeminfo['login'])
>   computer = as.character(systeminfo['nodename'])
>   time.start = as.character(Sys.time())
>   
>   ptime = gsub(" ","_",time.start)
>   ptime = gsub(":","-",ptime)
>   
>   print(paste("Hello ",user," of ",computer,", it is ",time.start,".",sep=""))
[1] "Hello smid of daman.utia.cas.cz, it is 2022-08-29 21:10:10."
> 
> #1.4 Checking the provided arguments. The following if-else goes through the whole script and stops if requested args are not provided.
>   if(length(args) > 1){
+     print("Inputs have been provided.")
+     data.input = args[1]
+     data.input.events = paste(args[1],"events.csv",sep=".")
+     f.input.id = args[2]
+     cox.f = fread("cox/cox_estimation_formulas.txt",stringsAsFactors = FALSE)
+     f.input = noquote(as.character(cox.f[cox.f$ID == f.input.id,2]))
+ 
+     print(paste("I am using file: ",data.input,sep=""))
+     print(paste("...and Cox formula: ",f.input,sep=""))   
+     
+     if(length(args)>2){
+       print("I can see a convertool log provided.")
+       convertool.log.location = args[3]
+       convertool.log = read.delim(convertool.log.location, header = FALSE, sep = "\t", dec = ".")
+       names(convertool.log) = "record"
+       convertool.vignette = convertool.log[1:7,]
+     } else {
+       print("No Convertool log has been provided.")
+       convertool.log = NA
+       convertool.vignette = NA
+     }
+     
+   ##2. Modeling procedure
+     
+   #2.1 Data loading and initial processing
+   mtab = fread(data.input,stringsAsFactors = FALSE)
+   mtab.events = fread(data.input.events,stringsAsFactors = FALSE)
+   file.name = strsplit(data.input,"/")[[1]]
+   file.name = gsub(".csv","",file.name[length(file.name)])
+   
+   mtab[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   mtab.events[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab.events[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   #2.2 Preparing output directory
+   dir.name = file.name
+   dir.name = paste("outputs/",dir.name,sep="")
+   paste("The model files will be stored in: ",dir.name,"/",sep="")
+   if(file.exists(dir.name)){
+     print("The directory already exists, files will be rewritten.")
+     } else {
+     dir.create(dir.name)
+     print("The directory has been created.")
+ }
+  
+ #2.3. Switching to output directory, saving input file's descriptive stats
+   st(mtab,out='csv',file=paste(dir.name,'input_summary.csv',sep="/"))
+ 
+   custom.dq = list()
+   
+   VaccStatus_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at T1 == 0"]] = VaccStatus_medians
+   
+   Immunity_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at T1 == 0"]] = Immunity_medians
+   
+   VaccStatus_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at the respective T"]] = VaccStatus_medians_events
+   
+   Immunity_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+   custom.dq[["Median stats for Immunity at the respective T"]] = Immunity_medians_events
+   
+   sink(paste(dir.name,"input_summary_custom.txt",sep="/"))
+   print(custom.dq)
+   sink()  
+   gc()
+ 
+   print("The input file has been loaded, its properties have been saved. Proceeding to Cox model.")
+   
+   
+   
+ #2.4 Cox model estimation
+   f.input = as.formula(f.input)
+   cox = eval(bquote(coxph(.(f.input),data=mtab,cluster=Subject)))
+ #  cox = eval(bquote(coxph(.(f.input),data=mtab,robust=FALSE)))
+   cox.summary = summary(cox) 
+   print(cox.summary) # returns output to the console
+ 
+   ##3. Model outputs generation
+   #3.1 Hazard ratio plot
+   ggforest(cox, data = data.frame(mtab))
+   ggsave(paste(dir.name,"cox_risks_log.jpg",sep="/"),units="px",width=3840,height=3840)
+   print("Model charts have been generated.")
+   
+   #3.2 Txt (model summary)
+   sink(paste(dir.name,"cox_output.txt",sep="/"))
+   print(cox.summary)
+   sink()  
+   gc()
+   print("Model output has been saved (TXT).")
+ 
+   #3.2 TeX (params and exp(params))
+   beta <- coef(cox)
+   se   <- sqrt(diag(cox$var))
+   p    <- 1 - pchisq((beta/se)^2, 1)
+   CI   <- round(confint(cox), 3)
+   res <- data.frame(beta, se = se, CI, p)
+   names(res)[3:4] = c("low","high")
+   res$model.betas = paste(round(res$beta,2)," (",round(res$low,2),", ",round(res$high,2),")",sep="")
+   
+   res$hr = exp(res$beta)
+   res$hr.se = exp(res$se)
+   res$hr.low = exp(res$low)
+   res$hr.high = exp(res$high)
+   res$model.hr = paste(round(res$hr,2)," (",round(res$hr.low,2),", ",round(res$hr.high,2),")",sep="")
+   
+   res$eff = 1-res$hr
+   res$eff.high = 1-res$hr.low
+   res$eff.low = 1-res$hr.high
+   res$model.effectiveness = paste(round(res$eff,2)," (",round(res$eff.low,2),", ",round(res$eff.high,2),")",sep="")
+ 
+   modtab = res[,c("model.betas","model.hr","model.effectiveness")]
+   names(modtab) = c("Beta","HR","1-HR")
+   print(xtable(modtab),include.rownames=TRUE,file = paste(dir.name,"cox_output.tex",sep="/"), compress = FALSE)
+   print("Model output has been saved (TeX).")  
+   
+   #4. Closing sequence
+   time.end = as.character(Sys.time())
+   model.spent = difftime(time.end,time.start)
+   print("The procedure is finished in following time:")
+   print(model.spent)
+   
+   #4.1 Saving model run stats
+   run.overview = list()
+   run.overview[["user"]] = user
+   run.overview[["computer"]] = computer
+   run.overview[["arguments"]] = args
+   run.overview[["time.start"]] = time.start
+   run.overview[["time.end"]] = time.end
+   run.overview[["model.spent"]] = model.spent
+   run.overview[["model.concordance"]] = cox$concordance['concordance']
+   run.overview[["convertool.vignette"]] = convertool.vignette
+   
+   res$model.concordance = run.overview[["model.concordance"]]
+   res$model.ctool.version = run.overview[["convertool.vignette"]][1]
+   res$model.age.filter = run.overview[["convertool.vignette"]][4]
+   res$model.input.file = run.overview[["convertool.vignette"]][7]
+   res$model.input.horizon = run.overview[["convertool.vignette"]][5]
+   res$model.mode = f.input.id
+   res$model.calculated.at = time.end
+   
+   write.csv(res,file=paste(dir.name,"model_data.csv",sep="/"),row.names=FALSE)
+ 
+   sink(paste(dir.name,"model_run_overview.txt",sep="/"))
+   print(run.overview)
+   sink()
+ 
+   #4.2 Saving environment image (without the most heavy items)
+   rm(mtab,cox)
+   save(list=ls(), file=paste(dir.name,"environment.Rdata",sep="/"),compress=TRUE,compression_level=9)
+   print("Workspace image and log have been saved.")
+   print("https://www.youtube.com/watch?v=g3ENX3aHlqU")
+   
+   } else {
+     stop("Data input has not been provided, goodbye")
+     print(data.input)
+   }
[1] "Inputs have been provided."
[1] "I am using file: data/temp/HOmicronInteractions.csv"
[1] "...and Cox formula: Surv(T1,T2,VariantHosp) ~ Immunity + AgeGr + Sex"
[1] "I can see a convertool log provided."
[1] "The directory already exists, files will be rewritten."
[1] "The input file has been loaded, its properties have been saved. Proceeding to Cox model."
Call:
coxph(formula = Surv(T1, T2, VariantHosp) ~ Immunity + AgeGr + 
    Sex, data = mtab, cluster = Subject)

  n= 16654171, number of events= 2048 

                            coef  exp(coef)   se(coef)  robust se        z
Immunityboost2-_alone -1.988e+00  1.369e-01  7.500e-02  7.592e-02  -26.194
Immunityboost2+_alone -1.557e+00  2.109e-01  8.849e-02  8.890e-02  -17.509
Immunityboost2+_inf6- -1.051e+01  2.723e-05  3.266e+04  7.803e-01  -13.471
Immunityfull2-_alone  -6.004e-01  5.486e-01  1.274e-01  1.282e-01   -4.683
Immunityfull2+_alone  -3.457e-01  7.077e-01  5.699e-02  5.753e-02   -6.009
Immunityfull2+_inf6-  -2.867e+00  5.690e-02  7.083e-01  7.084e-01   -4.047
Immunityinf6-_alone   -1.310e+00  2.699e-01  2.611e-01  2.618e-01   -5.002
Immunityinf6-_boost2- -1.077e+01  2.107e-05  9.994e+01  4.507e-02 -238.925
Immunityinf6-_boost2+ -1.237e+00  2.903e-01  1.001e+00  1.001e+00   -1.235
Immunityinf6-_full2-  -1.013e+01  3.992e-05  1.918e+02  5.401e-02 -187.518
Immunityinf6-_full2+  -2.644e+00  7.105e-02  1.001e+00  1.001e+00   -2.641
Immunityinf6+_alone   -1.079e+00  3.398e-01  1.532e-01  1.528e-01   -7.062
Immunityinf6+_boost2- -2.948e+00  5.246e-02  2.914e-01  2.912e-01  -10.124
Immunityinf6+_boost2+ -2.283e+00  1.019e-01  4.106e-01  4.109e-01   -5.557
Immunityinf6+_full2-  -2.900e+00  5.500e-02  7.082e-01  7.082e-01   -4.096
Immunityinf6+_full2+  -1.323e+00  2.664e-01  1.511e-01  1.512e-01   -8.749
Immunitypart_alone    -4.981e-01  6.077e-01  2.452e-01  2.453e-01   -2.031
AgeGr0-11             -6.685e-02  9.353e-01  1.473e-01  1.457e-01   -0.459
AgeGr12-15            -2.363e-01  7.896e-01  2.146e-01  2.152e-01   -1.098
AgeGr16-17             3.454e-01  1.413e+00  2.414e-01  2.417e-01    1.429
AgeGr18-24             4.285e-01  1.535e+00  1.630e-01  1.637e-01    2.618
AgeGr25-29            -6.374e-02  9.382e-01  1.843e-01  1.839e-01   -0.347
AgeGr30-34            -8.775e-03  9.913e-01  1.764e-01  1.762e-01   -0.050
AgeGr35-39             4.169e-02  1.043e+00  1.742e-01  1.740e-01    0.240
AgeGr45-49             2.281e-01  1.256e+00  1.692e-01  1.697e-01    1.344
AgeGr50-54             4.978e-01  1.645e+00  1.686e-01  1.689e-01    2.948
AgeGr55-59             8.586e-01  2.360e+00  1.583e-01  1.585e-01    5.417
AgeGr60-64             9.928e-01  2.699e+00  1.574e-01  1.573e-01    6.312
AgeGr65-69             1.591e+00  4.908e+00  1.439e-01  1.440e-01   11.046
AgeGr70-74             1.978e+00  7.230e+00  1.404e-01  1.409e-01   14.042
AgeGr75-79             2.733e+00  1.538e+01  1.375e-01  1.390e-01   19.665
AgeGr80+               3.193e+00  2.437e+01  1.309e-01  1.309e-01   24.394
SexZ                  -2.585e-01  7.722e-01  4.491e-02  4.599e-02   -5.622
                      Pr(>|z|)    
Immunityboost2-_alone  < 2e-16 ***
Immunityboost2+_alone  < 2e-16 ***
Immunityboost2+_inf6-  < 2e-16 ***
Immunityfull2-_alone  2.83e-06 ***
Immunityfull2+_alone  1.87e-09 ***
Immunityfull2+_inf6-  5.20e-05 ***
Immunityinf6-_alone   5.67e-07 ***
Immunityinf6-_boost2-  < 2e-16 ***
Immunityinf6-_boost2+  0.21679    
Immunityinf6-_full2-   < 2e-16 ***
Immunityinf6-_full2+   0.00826 ** 
Immunityinf6+_alone   1.64e-12 ***
Immunityinf6+_boost2-  < 2e-16 ***
Immunityinf6+_boost2+ 2.75e-08 ***
Immunityinf6+_full2-  4.21e-05 ***
Immunityinf6+_full2+   < 2e-16 ***
Immunitypart_alone     0.04225 *  
AgeGr0-11              0.64633    
AgeGr12-15             0.27229    
AgeGr16-17             0.15300    
AgeGr18-24             0.00885 ** 
AgeGr25-29             0.72893    
AgeGr30-34             0.96028    
AgeGr35-39             0.81069    
AgeGr45-49             0.17892    
AgeGr50-54             0.00320 ** 
AgeGr55-59            6.05e-08 ***
AgeGr60-64            2.76e-10 ***
AgeGr65-69             < 2e-16 ***
AgeGr70-74             < 2e-16 ***
AgeGr75-79             < 2e-16 ***
AgeGr80+               < 2e-16 ***
SexZ                  1.89e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

                      exp(coef) exp(-coef) lower .95 upper .95
Immunityboost2-_alone 1.369e-01  7.305e+00 1.180e-01 1.589e-01
Immunityboost2+_alone 2.109e-01  4.742e+00 1.772e-01 2.510e-01
Immunityboost2+_inf6- 2.723e-05  3.673e+04 5.900e-06 1.257e-04
Immunityfull2-_alone  5.486e-01  1.823e+00 4.267e-01 7.053e-01
Immunityfull2+_alone  7.077e-01  1.413e+00 6.323e-01 7.922e-01
Immunityfull2+_inf6-  5.690e-02  1.758e+01 1.419e-02 2.281e-01
Immunityinf6-_alone   2.699e-01  3.705e+00 1.615e-01 4.509e-01
Immunityinf6-_boost2- 2.107e-05  4.745e+04 1.929e-05 2.302e-05
Immunityinf6-_boost2+ 2.903e-01  3.445e+00 4.078e-02 2.067e+00
Immunityinf6-_full2-  3.992e-05  2.505e+04 3.591e-05 4.438e-05
Immunityinf6-_full2+  7.105e-02  1.407e+01 9.986e-03 5.055e-01
Immunityinf6+_alone   3.398e-01  2.943e+00 2.519e-01 4.585e-01
Immunityinf6+_boost2- 5.246e-02  1.906e+01 2.965e-02 9.282e-02
Immunityinf6+_boost2+ 1.019e-01  9.810e+00 4.555e-02 2.281e-01
Immunityinf6+_full2-  5.500e-02  1.818e+01 1.373e-02 2.204e-01
Immunityinf6+_full2+  2.664e-01  3.754e+00 1.981e-01 3.583e-01
Immunitypart_alone    6.077e-01  1.646e+00 3.757e-01 9.827e-01
AgeGr0-11             9.353e-01  1.069e+00 7.030e-01 1.244e+00
AgeGr12-15            7.896e-01  1.266e+00 5.179e-01 1.204e+00
AgeGr16-17            1.413e+00  7.079e-01 8.795e-01 2.269e+00
AgeGr18-24            1.535e+00  6.515e-01 1.114e+00 2.115e+00
AgeGr25-29            9.382e-01  1.066e+00 6.543e-01 1.346e+00
AgeGr30-34            9.913e-01  1.009e+00 7.018e-01 1.400e+00
AgeGr35-39            1.043e+00  9.592e-01 7.412e-01 1.466e+00
AgeGr45-49            1.256e+00  7.961e-01 9.008e-01 1.752e+00
AgeGr50-54            1.645e+00  6.079e-01 1.182e+00 2.291e+00
AgeGr55-59            2.360e+00  4.238e-01 1.730e+00 3.219e+00
AgeGr60-64            2.699e+00  3.705e-01 1.983e+00 3.673e+00
AgeGr65-69            4.908e+00  2.038e-01 3.701e+00 6.508e+00
AgeGr70-74            7.230e+00  1.383e-01 5.485e+00 9.529e+00
AgeGr75-79            1.538e+01  6.503e-02 1.171e+01 2.019e+01
AgeGr80+              2.437e+01  4.103e-02 1.885e+01 3.150e+01
SexZ                  7.722e-01  1.295e+00 7.056e-01 8.450e-01

Concordance= 0.778  (se = 0.006 )
Likelihood ratio test= 2913  on 33 df,   p=<2e-16
Wald test            = 130172  on 33 df,   p=<2e-16
Score (logrank) test = 4186  on 33 df,   p=<2e-16,   Robust = 1705  p=<2e-16

  (Note: the likelihood ratio and score tests assume independence of
     observations within a cluster, the Wald and robust score tests do not).
[1] "Model charts have been generated."
[1] "Model output has been saved (TXT)."
[1] "Model output has been saved (TeX)."
[1] "The procedure is finished in following time:"
Time difference of 22.95 mins
[1] "Workspace image and log have been saved."
[1] "https://www.youtube.com/watch?v=g3ENX3aHlqU"
> 
